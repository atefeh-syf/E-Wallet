// Code generated by protoc-gen-go. DO NOT EDIT.
// source: watermarksvc.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	watermarksvc.proto

It has these top-level messages:
	Wallet
	GetRequest
	GetReply
	StatusRequest
	StatusReply
	WalletRequest
	WalletReply
	AddWalletRequest
	AddWalletReply
	ServiceStatusRequest
	ServiceStatusReply
*/
package watermark

// import (
// 	fmt "fmt"

// 	proto "github.com/golang/protobuf/proto"

// 	math "math"

// 	context "golang.org/x/net/context"

// 	grpc "google.golang.org/grpc"
// )

// // Reference imports to suppress errors if they are not otherwise used.
// var _ = proto.Marshal
// var _ = fmt.Errorf
// var _ = math.Inf

// // This is a compile-time assertion to ensure that this generated file
// // is compatible with the proto package it is being compiled against.
// // A compilation error at this line likely means your copy of the
// // proto package needs to be updated.
// const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// type StatusReply_Status int32

// const (
// 	StatusReply_PENDING     StatusReply_Status = 0
// 	StatusReply_STARTED     StatusReply_Status = 1
// 	StatusReply_IN_PROGRESS StatusReply_Status = 2
// 	StatusReply_FINISHED    StatusReply_Status = 3
// 	StatusReply_FAILED      StatusReply_Status = 4
// )

// var StatusReply_Status_name = map[int32]string{
// 	0: "PENDING",
// 	1: "STARTED",
// 	2: "IN_PROGRESS",
// 	3: "FINISHED",
// 	4: "FAILED",
// }
// var StatusReply_Status_value = map[string]int32{
// 	"PENDING":     0,
// 	"STARTED":     1,
// 	"IN_PROGRESS": 2,
// 	"FINISHED":    3,
// 	"FAILED":      4,
// }

// func (x StatusReply_Status) String() string {
// 	return proto.EnumName(StatusReply_Status_name, int32(x))
// }
// func (StatusReply_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

// type Wallet struct {
// 	Name        string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
// 	Type        string  `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
// 	Balance     float64 `protobuf:"float,64,opt,name=balance" json:"balance,omitempty"`
// 	Slug        string    `protobuf:"bytes,2,opt,name=slug" json:"slug,omitempty"`
// 	Description string    `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
// 	UserId      uint  `protobuf:"int,name=user_id" json:"user_id"`
// }

// func (m *Wallet) Reset()                    { *m = Wallet{} }
// func (m *Wallet) String() string            { return proto.CompactTextString(m) }
// func (*Wallet) ProtoMessage()               {}
// func (*Wallet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// func (m *Wallet) GetName() string {
// 	if m != nil {
// 		return m.Name
// 	}
// 	return ""
// }

// func (m *Wallet) GetType() string {
// 	if m != nil {
// 		return m.Type
// 	}
// 	return ""
// }

// func (m *Wallet) GetBalance() string {
// 	if m != nil {
// 		return m.GetBalance()
// 	}
// 	return ""
// }

// func (m *Wallet) GetSlug() string {
// 	if m != nil {
// 		return m.Slug
// 	}
// 	return ""
// }

// func (m *Wallet) GetDescription() string {
// 	if m != nil {
// 		return m.Description
// 	}
// 	return ""
// }


// func (m *Wallet) GetUserId() uint {
// 	if m != nil {
// 		return m.UserId
// 	}
// 	return 0
// }

// type GetRequest struct {
// 	Filters []*GetRequest_Filters `protobuf:"bytes,1,rep,name=filters" json:"filters,omitempty"`
// }

// func (m *GetRequest) Reset()                    { *m = GetRequest{} }
// func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
// func (*GetRequest) ProtoMessage()               {}
// func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// func (m *GetRequest) GetFilters() []*GetRequest_Filters {
// 	if m != nil {
// 		return m.Filters
// 	}
// 	return nil
// }

// type GetRequest_Filters struct {
// 	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
// 	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
// }

// func (m *GetRequest_Filters) Reset()                    { *m = GetRequest_Filters{} }
// func (m *GetRequest_Filters) String() string            { return proto.CompactTextString(m) }
// func (*GetRequest_Filters) ProtoMessage()               {}
// func (*GetRequest_Filters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

// func (m *GetRequest_Filters) GetKey() string {
// 	if m != nil {
// 		return m.Key
// 	}
// 	return ""
// }

// func (m *GetRequest_Filters) GetValue() string {
// 	if m != nil {
// 		return m.Value
// 	}
// 	return ""
// }

// type GetReply struct {
// 	Wallets []*Wallet `protobuf:"bytes,1,rep,name=wallet" json:"wallet,omitempty"`
// 	Err       string      `protobuf:"bytes,2,opt,name=Err,json=err" json:"Err,omitempty"`
// }

// func (m *GetReply) Reset()                    { *m = GetReply{} }
// func (m *GetReply) String() string            { return proto.CompactTextString(m) }
// func (*GetReply) ProtoMessage()               {}
// func (*GetReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// func (m *GetReply) GetWallets() []*Wallet {
// 	if m != nil {
// 		return m.Wallets
// 	}
// 	return nil
// }

// func (m *GetReply) GetErr() string {
// 	if m != nil {
// 		return m.Err
// 	}
// 	return ""
// }

// type StatusRequest struct {
// 	TicketID string `protobuf:"bytes,1,opt,name=ticketID" json:"ticketID,omitempty"`
// }

// func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
// func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
// func (*StatusRequest) ProtoMessage()               {}
// func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// type WalletReply struct {
// 	Code int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
// 	Err  string `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
// }

// func (m *WalletReply) Reset()                    { *m = WalletReply{} }
// func (m *WalletReply) String() string            { return proto.CompactTextString(m) }
// func (*WalletReply) ProtoMessage()               {}
// func (*WalletReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// func (m *WalletReply) GetCode() int64 {
// 	if m != nil {
// 		return m.Code
// 	}
// 	return 0
// }

// func (m *WalletReply) GetErr() string {
// 	if m != nil {
// 		return m.Err
// 	}
// 	return ""
// }

// type AddWalletRequest struct {
// 	Wallet *Wallet `protobuf:"bytes,1,opt,name=wallet" json:"wallet,omitempty"`
// }

// func (m *AddWalletRequest) Reset()                    { *m = AddWalletRequest{} }
// func (m *AddWalletRequest) String() string            { return proto.CompactTextString(m) }
// func (*AddWalletRequest) ProtoMessage()               {}
// func (*AddWalletRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

// func (m *AddWalletRequest) GetWallet() *Wallet {
// 	if m != nil {
// 		return m.Wallet
// 	}
// 	return nil
// }

// func init() {
// 	proto.RegisterType((*Wallet)(nil), "pb.Wallet")
// 	proto.RegisterType((*GetRequest)(nil), "pb.GetRequest")
// 	proto.RegisterType((*GetRequest_Filters)(nil), "pb.GetRequest.Filters")
// 	proto.RegisterType((*GetReply)(nil), "pb.GetReply")
// 	proto.RegisterType((*StatusRequest)(nil), "pb.StatusRequest")
// 	proto.RegisterType((*WalletReply)(nil), "pb.WalletReply")
// 	proto.RegisterType((*AddWalletRequest)(nil), "pb.AddWalletRequest")
// 	proto.RegisterEnum("pb.StatusReply_Status", StatusReply_Status_name, StatusReply_Status_value)
// }

// // Reference imports to suppress errors if they are not otherwise used.
// var _ context.Context
// var _ grpc.ClientConn

// // This is a compile-time assertion to ensure that this generated file
// // is compatible with the grpc package it is being compiled against.
// const _ = grpc.SupportPackageIsVersion4

// // Client API for Wallet service

// type WalletClient interface {
// 	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error)
// }

// type watermarkClient struct {
// 	cc *grpc.ClientConn
// }

// func NewWalletClient(cc *grpc.ClientConn) WalletClient {
// 	return &watermarkClient{cc}
// }

// func (c *watermarkClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error) {
// 	out := new(GetReply)
// 	err := grpc.Invoke(ctx, "/pb.Wallet/Get", in, out, c.cc, opts...)
// 	if err != nil {
// 		return nil, err
// 	}
// 	return out, nil
// }


// // Server API for Wallet service

// type WalletServer interface {
// 	Get(context.Context, *GetRequest) (*GetReply, error)
// }

// func RegisterWalletServer(s *grpc.Server, srv WalletServer) {
// 	s.RegisterService(&_Wallet_serviceDesc, srv)
// }

// func _Wallet_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
// 	in := new(GetRequest)
// 	if err := dec(in); err != nil {
// 		return nil, err
// 	}
// 	if interceptor == nil {
// 		return srv.(WalletServer).Get(ctx, in)
// 	}
// 	info := &grpc.UnaryServerInfo{
// 		Server:     srv,
// 		FullMethod: "/pb.Wallet/Get",
// 	}
// 	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
// 		return srv.(WalletServer).Get(ctx, req.(*GetRequest))
// 	}
// 	return interceptor(ctx, in, info, handler)
// }

// var _Wallet_serviceDesc = grpc.ServiceDesc{
// 	ServiceName: "pb.Wallet",
// 	HandlerType: (*WalletServer)(nil),
// 	Methods: []grpc.MethodDesc{
// 		{
// 			MethodName: "Get",
// 			Handler:    _Wallet_Get_Handler,
// 		},
// 	},
// 	Streams:  []grpc.StreamDesc{},
// 	Metadata: "watermarksvc.proto",
// }

// func init() { proto.RegisterFile("watermarksvc.proto", fileDescriptor0) }

// var fileDescriptor0 = []byte{
// 	// 533 bytes of a gzipped FileDescriptorProto
// 	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x6d, 0x8b, 0xd3, 0x40,
// 	0x10, 0x6e, 0x9a, 0x5e, 0x5f, 0xa6, 0xbd, 0x5e, 0x1c, 0x4a, 0x09, 0xc1, 0x0f, 0xc7, 0x82, 0x50,
// 	0x14, 0x82, 0x9e, 0xa0, 0x20, 0x28, 0x56, 0x93, 0xf6, 0x02, 0x5a, 0x8f, 0xe4, 0xc0, 0x8f, 0xd2,
// 	0xa6, 0x2b, 0x96, 0xf6, 0x9a, 0xdc, 0x66, 0x53, 0xe9, 0x1f, 0xf0, 0x67, 0xe8, 0x5f, 0x95, 0xdd,
// 	0xbc, 0x34, 0x49, 0xcb, 0x71, 0xdf, 0xf6, 0x99, 0x79, 0xe6, 0xed, 0x99, 0x61, 0x01, 0x7f, 0xcf,
// 	0x39, 0x65, 0x77, 0x73, 0xb6, 0x8e, 0x76, 0xbe, 0x19, 0xb2, 0x80, 0x07, 0x58, 0x0f, 0x17, 0xe4,
// 	0x8f, 0x02, 0x6d, 0x2b, 0xf0, 0xe3, 0x3b, 0xba, 0xe5, 0xa8, 0x43, 0xcb, 0x0f, 0xb6, 0x9c, 0x6e,
// 	0xb9, 0xae, 0x5c, 0x2a, 0xa3, 0x8e, 0x9b, 0x41, 0x1c, 0xc0, 0x19, 0x5f, 0xf1, 0x0d, 0xd5, 0xeb,
// 	0xd2, 0x9e, 0x00, 0x1c, 0x42, 0x73, 0x1e, 0xf3, 0x5f, 0x01, 0xd3, 0x55, 0x69, 0x4e, 0x91, 0x64,
// 	0x07, 0xe1, 0xca, 0xd7, 0x1b, 0x29, 0x5b, 0x00, 0x7c, 0x0a, 0x9d, 0xbc, 0x09, 0xfd, 0x4c, 0x7a,
// 	0x0e, 0x06, 0x72, 0x0f, 0x30, 0xa5, 0xdc, 0xa5, 0xf7, 0x31, 0x8d, 0x38, 0xbe, 0x84, 0xd6, 0xcf,
// 	0xd5, 0x86, 0x53, 0x16, 0xe9, 0xca, 0xa5, 0x3a, 0xea, 0x5e, 0x0d, 0xcd, 0x70, 0x61, 0x1e, 0x08,
// 	0xe6, 0x24, 0xf1, 0xba, 0x19, 0xcd, 0x78, 0x05, 0xad, 0xd4, 0x86, 0x1a, 0xa8, 0x6b, 0xba, 0x4f,
// 	0x47, 0x10, 0x4f, 0xd1, 0xd0, 0x6e, 0xbe, 0x89, 0xf3, 0xf6, 0x25, 0x20, 0xd7, 0xd0, 0x96, 0x19,
// 	0xc3, 0xcd, 0x1e, 0x9f, 0x43, 0x67, 0x99, 0xca, 0x90, 0x95, 0xec, 0x89, 0x92, 0x99, 0x36, 0xee,
// 	0xc1, 0x2d, 0xf2, 0xdb, 0x8c, 0xa5, 0xb9, 0x54, 0xca, 0x18, 0x79, 0x01, 0xe7, 0x1e, 0x9f, 0xf3,
// 	0x38, 0xca, 0xfa, 0x37, 0xa0, 0xcd, 0x57, 0xfe, 0x9a, 0x72, 0xc7, 0x4a, 0xfb, 0xc8, 0x31, 0xf9,
// 	0xab, 0x40, 0x37, 0x63, 0x8b, 0xd2, 0x26, 0x34, 0x23, 0x09, 0x25, 0xb3, 0x9f, 0x8c, 0x5a, 0x20,
// 	0x64, 0xef, 0x94, 0x75, 0xa2, 0xfc, 0x57, 0x68, 0x26, 0x1c, 0xec, 0x42, 0xeb, 0xc6, 0x9e, 0x59,
// 	0xce, 0x6c, 0xaa, 0xd5, 0x04, 0xf0, 0x6e, 0xc7, 0xee, 0xad, 0x6d, 0x69, 0x0a, 0x5e, 0x40, 0xd7,
// 	0x99, 0xfd, 0xb8, 0x71, 0xbf, 0x4d, 0x5d, 0xdb, 0xf3, 0xb4, 0x3a, 0xf6, 0xa0, 0x3d, 0x71, 0x66,
// 	0x8e, 0x77, 0x6d, 0x5b, 0x9a, 0x8a, 0x00, 0xcd, 0xc9, 0xd8, 0xf9, 0x62, 0x5b, 0x5a, 0x83, 0x7c,
// 	0x02, 0xed, 0x7b, 0xb6, 0x97, 0x47, 0x0c, 0x84, 0x08, 0x0d, 0xb9, 0xd3, 0xa4, 0x23, 0xf9, 0x26,
// 	0x6f, 0xa0, 0x5f, 0xc8, 0x21, 0xc6, 0x44, 0x68, 0xf8, 0xc1, 0x92, 0xca, 0x68, 0xd5, 0x95, 0x6f,
// 	0x31, 0x0a, 0x2d, 0x8f, 0xf2, 0x01, 0x70, 0xbc, 0x5c, 0xe6, 0xaa, 0xa7, 0xd5, 0x47, 0xd0, 0xce,
// 	0xe4, 0x97, 0xf1, 0xd5, 0xe5, 0xe4, 0x5e, 0xf2, 0x11, 0xb4, 0x52, 0xbc, 0xa8, 0xfc, 0x50, 0xef,
// 	0xc7, 0x1d, 0x0c, 0x61, 0xe0, 0x51, 0xb6, 0x5b, 0xf9, 0xb4, 0xb4, 0x52, 0xf2, 0x0e, 0xb0, 0x62,
// 	0x7f, 0xf4, 0x54, 0x57, 0xff, 0xea, 0xd0, 0xc9, 0xe5, 0xc0, 0x67, 0xa0, 0x4e, 0x29, 0xc7, 0x7e,
// 	0xf9, 0xa4, 0x8d, 0x5e, 0x8e, 0xc3, 0xcd, 0x9e, 0xd4, 0xf0, 0x6d, 0x31, 0x66, 0x20, 0x9c, 0xd5,
// 	0xad, 0x18, 0x58, 0xb1, 0x26, 0x81, 0x66, 0x7e, 0x0e, 0x4f, 0x8a, 0xa7, 0x94, 0x84, 0x5c, 0x54,
// 	0xae, 0x8b, 0xd4, 0xf0, 0x3d, 0x74, 0x0b, 0x9a, 0xa1, 0xbc, 0xbf, 0xe3, 0x25, 0x18, 0x83, 0x23,
// 	0x7b, 0x12, 0xfe, 0x19, 0xce, 0x4b, 0xc2, 0xa0, 0x2e, 0x4b, 0x9c, 0xd0, 0xd0, 0x18, 0x9e, 0xf0,
// 	0xc8, 0x24, 0x8b, 0xa6, 0xfc, 0x92, 0x5e, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x3c, 0xfc, 0x8b,
// 	0xc5, 0xa8, 0x04, 0x00, 0x00,
// }