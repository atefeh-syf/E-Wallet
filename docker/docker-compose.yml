version: '3.7'

services:
  ####################### SETUP #######################
  setup:
    build:
      context: elk/setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./elk/setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./elk/setup/helpers.sh:/helpers.sh:ro,Z
      - ./elk/setup/roles:/roles:ro,Z
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
    networks:
      - yamigo_network
    depends_on:
      - elasticsearch
  
  ####################### ELK #######################
  elasticsearch:
    build:
      context: elk/elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    container_name: elasticsearch
    volumes:
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - yamigo_network
    restart: unless-stopped

  kibana:
    build:
      context: elk/kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
      - elasticsearch:/usr/share/kibana/data:Z
    ports:
      - 5601:5601
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - yamigo_network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  filebeat:
    build:
      context: elk/filebeat/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    user: root
    command:
      - -e
      - --strict.perms=false
    volumes:
      - ./elk/filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ../src/logs:/var/log/filebeat/service:ro
      #- ../prod/logs:/var/log/filebeat/service:ro
      - logs:/var/log/filebeat
      - logs:/app:ro
 
    environment:
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
    networks:
      - yamigo_network
    depends_on:
      - elasticsearch

  ####################### REDIS #######################
  redis:
    image: redis:latest
    container_name: redis_container
    command: ["redis-server", "/etc/redis/redis.conf"]
    volumes:
      - ./redis/redis.conf:/etc/redis/redis.conf
      - redis:/etc/redis 
    ports:
      - "6380:6380"
    networks:
      - yamigo_network
####################rabbitmq###############################
  rabbitmq:
    # There is a prebuilt RabbitMQ image; see
    # https://hub.docker.com/_/rabbitmq/ for details.
    # This variant is built on Alpine Linux (it's smaller) and includes
    # the management UI.
    image: 'rabbitmq:3.6-management-alpine'

    # These ports are exposed on the host; 'hostport:containerport'.
    # You could connect to this server from outside with the *host's*
    # DNS name or IP address and port 5672 (the left-hand side of the
    # colon).
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'

    # Run this container on a private network for this application.
    # This is necessary for magic Docker DNS to work: other containers
    # also running on this network will see a host name "rabbitmq"
    # (the name of this section) and the internal port 5672, even though
    # that's not explicitly published above.
    networks:
      - yamigo_network

####################### user_service_db POSTGRES #######################
  user_service_db:
    image: postgres
    container_name: user_service_db_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: user_db
      PGDATA: /data/postgres
    volumes:
      - user_service_db:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - yamigo_network
    restart: unless-stopped
####################### pgAdmin #######################
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: atefeh.syf@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 123456
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "8090:80"
    networks:
      - yamigo_network
    restart: unless-stopped
    depends_on:
      - user_service_db
  
####################### api_gateway service #######################
  api_gateway:
    image: api_gateway:latest
    container_name: api_gateway
    environment:
      - PORT=5000
    ports:
      - 5000:5000
    networks:
      - yamigo_network
    volumes:
      - logs:/app/logs
    depends_on:
      - user_service_db
      - elasticsearch
      - user_service
    restart: unless-stopped
####################### user_service service #######################
  user_service:
    image: user_service:latest
    container_name: user_service
    environment:
      - PORT=5001
    ports:
      - 5001:5001
    networks:
      - yamigo_network
    volumes:
      - logs:/app/logs
    depends_on:
      - user_service_db
      - elasticsearch
    restart: unless-stopped
####################### VOLUME AND NETWORKS #######################
volumes:
  user_service_db:
  pgadmin:
  redis:
  logs:
  setup:
  elasticsearch:

networks:
  yamigo_network:
    driver: bridge